The ``1-my_list`` module
============================

Using ``mylist``
---------------------

Import function from module:
    >>> MyList = __import__('1-my_list').MyList

Test 1:
    >>> ml = MyList()
    >>> isinstance(ml, list)
    True

Test 2:
    >>> ml = MyList()
    >>> type(ml) == MyList
    True

Test 3:
    >>> ml = MyList()
    >>> ml.print_sorted()
    []

Test 4:
    >>> type(MyList.__dict__['print_sorted'])
    <class 'function'>

Test 5:
    >>> ml = MyList([14, 4, 17, 16, 45])
    >>> ml.print_sorted()
    [4, 14, 16, 17, 45]

Test 6:
    >>> ml = MyList([422, 10, 18])
    >>> ml.print_sorted()
    [10, 18, 422]

Test 7:
    >>> ml = MyList([-18887, -896, -2525657, 2, -434234946, -1456])
    >>> ml.print_sorted()
    [-434234946, -2525657, -18887, -1456, -896, 2]

Test 8:
    >>> ml = MyList([-3034, 14, 18, 32, 185, 353, 70507])
    >>> ml.print_sorted()
    [-3034, 14, 18, 32, 185, 353, 70507]

Test 9:
    >>> ml = MyList([3, 11, 2, -30, 20, 647, 1])
    >>> ml.print_sorted()
    [-30, 1, 2, 3, 11, 20, 647]
    >>> ml
    [3, 11, 2, -30, 20, 647, 1]

Test 10:
    >>> ml.print_sorted([54, 7, 12])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Test 11:
    >>> ml.__class__.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

Test 12:
    >>> ml = MyList()
    >>> ml.append(1)
    >>> ml
    [1]

Test 13:
    >>> ml.print_sorted([-7, 8, 15], 190)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 3 were given
