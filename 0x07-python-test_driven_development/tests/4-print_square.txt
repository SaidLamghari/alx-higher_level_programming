The ``4-print_square`` module
============================

Using ``print_square``
---------------------

Import module:
    >>> print_square = __import__('4-print_square').print_square

Test 1:
    >>> print_square(0)

Test 2:
    >>> print_square(2)
    ##
    ##

Test 3:
    >>> print_square(1)
    #

Test 4:
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test 5:
    >>> print_square(3)
    ###
    ###
    ###

Test 6:
    >>> print_square(10.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test 7:
    >>> print_square(-10)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test 8:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test 9:
    >>> print_square("foo")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test 10:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Test 11:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test 12:
    >>> print_square(float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

